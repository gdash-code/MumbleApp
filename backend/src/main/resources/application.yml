server:
  port: 8080

spring:
  datasource:
    url: jdbc:postgresql://localhost:5433/mumbledb
    username: postgres
    password: mumble
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update # Creates tables automatically (use 'validate' in production)
    show-sql: true #Logs SQL queries in console
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect

kafka:
  bootstrap-servers: localhost:9092
  producer:
    key-serializer: org.apache.kafka.common.serialization.StringSerializer
    value-serializer: org.apache.kafka.common.serialization.StringSerializer
  consumer:
    group-id: audio-processing
    auto-offset-reset: earliest
    key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    value-deserializer: org.apache.kafka.common.serialization.StringDeserializer

openai-service:
  api-key: ${OPENAI_API_KEY}  #Securely read from env variable Use AWS Secrets Manager for Production
  gpt-model: gpt-3.5-turbo
  audio-model: whisper-1
  http-client:
    read-timeout: 30s
    connect-timeout: 10s
  urls:
    base-url: https://api.openai.com/v1
    chat-url: ${openai-service.urls.base-url}/chat/completions
    create-transcription-url: ${openai-service.urls.base-url}/audio/transcriptions
